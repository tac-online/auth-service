plugins {
    id 'java'
    id 'application'
    id 'com.bmuschko.docker-java-application' version '4.3.0'
}

mainClassName = 'de.johanneswirth.tac.authservice.AuthServiceApp'

group 'de.johannes-wirth'
version '0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: '1.3.8'
    compile group: 'io.dropwizard', name: 'dropwizard-jdbi3', version: '1.3.8'
    compile group: 'io.dropwizard', name: 'dropwizard-auth', version: '1.3.8'
    compile group: 'io.dropwizard.modules', name: 'dropwizard-discovery', version: '1.3.0-1'
    compile group: 'de.johannes-wirth', name: 'tac-backend-common', version: '0.1'
    compile 'com.auth0:java-jwt:3.4.0'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
}

jar {
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest { attributes 'Main-Class': 'de.johanneswirth.tac.authservice.AuthServiceApp' }
}

task copyConfig(type: Copy) {
    from file("config.yml")
    into file("build/install/")
}

task excludeLibraries(type: Delete) {
    delete fileTree(dir: "build/docker/${rootProject.name}/lib")
}

dockerBuildImage.dependsOn excludeLibraries
dockerBuildImage.dependsOn copyConfig

task copySql(type: Copy) {
    from file("sql/")
    into file("build/install/sql/")
}

dockerBuildImage.dependsOn copySql

docker {
    javaApplication {
        baseImage = 'java:openjdk-8-jre'
        maintainer = 'Johannes Wirth "johannes-wirth@posteo.de"'
        ports = [8080, 8081]
        tag = rootProject.name + ":" + version
        exec {
            defaultCommand 'server', 'config.yml'
            entryPoint '/tac-auth-service/bin/tac-auth-service'
        }
    }
}

task tagImage(type:Exec) {
    dependsOn dockerBuildImage
    //on windows:
    commandLine 'cmd', '/c', 'docker tag ' + rootProject.name + ":" + version + " johannes-wirth.de:5001/" + rootProject.name + ":" + version
}

task publishImage(type:Exec) {
    dependsOn tagImage
    //on windows:
    commandLine 'cmd', '/c', 'docker push johannes-wirth.de:5001/' + rootProject.name + ":" + version
}


dockerCreateDockerfile.addFile('config.yml', 'config.yml')
dockerCreateDockerfile.addFile('sql/', 'sql/')